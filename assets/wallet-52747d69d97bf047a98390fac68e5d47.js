define("wallet/adapters/address",["wallet/adapters/chain.com","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.extend({})}),define("wallet/adapters/chain.com",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.RESTAdapter.extend({host:"https://api.chain.com",namespace:"v2/bitcoin/",buildURL:function(e,t){return this._super(e,t)+"?api-key-id=185fcf18e6208415c5f037895aeb484c"}})}),define("wallet/adapters/ticker",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.RESTAdapter.extend({host:"https://api.bitcoinaverage.com",pathForType:function(e){return e+"/global/all"}})}),define("wallet/adapters/transaction",["wallet/adapters/chain.com","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.extend({namespace:"/v2/bitcoin/addresses/",buildURL:function(){return this.host+this.namespace+window._address+"/transactions?api-key-id=185fcf18e6208415c5f037895aeb484c"}})}),define("wallet/app",["ember","ember/resolver","ember/load-initializers","wallet/config/environment","ember-data","exports"],function(e,t,a,s,n,r){"use strict";{var i=e["default"],l=t["default"],o=a["default"],u=s["default"];n["default"]}i.MODEL_FACTORY_INJECTIONS=!0;var c=i.Application.extend({modulePrefix:u.modulePrefix,podModulePrefix:u.podModulePrefix,Resolver:l,chainApiKey:u.apiKey});o(c,u.modulePrefix),r["default"]=c}),define("wallet/components/send-form",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Component.extend({actions:{submit:function(){this.sendAction("submit",{amount:this.get("amount"),address:this.get("address")})}}})}),define("wallet/components/ticker-board",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Component.extend({})}),define("wallet/controllers/application",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Controller.extend({init:function(){var e,t=window.localStorage.getItem("wallet_seed");t&&(e=new bitcoin.Wallet(bitcoin.crypto.sha256(t))),e&&(this.set("wallet",e),window._address=e.getAddress())}})}),define("wallet/controllers/index",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Controller.extend({needs:["application"],actions:{openWallet:function(e){var t=new bitcoin.Wallet(bitcoin.crypto.sha256(e));return window.localStorage.setItem("wallet_seed",e),this.get("controllers.application").set("wallet",t),window._address=t.getAddress(),this.transitionToRoute("wallet"),!1}}})}),define("wallet/controllers/wallet",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Controller.extend({needs:["application"],sortProperties:["confirmations"],sortAscending:!1,init:function(){var e=this.get("controllers.application").get("wallet");e||this.transitionToRoute("index")},wallet:function(){var e=this.get("controllers.application").get("wallet");return e}.property(),balance:function(){return this.get("wallet").getBalance()}.property("wallet"),actions:{sendBTC:function(e){var t=this.get("controllers.application").get("wallet"),a=t.getPrivateKey().toWIF(),s=new Chain({blockChain:"bitcoin",apiKeyId:"185fcf18e6208415c5f037895aeb484c"});s.transact({inputs:[{address:window._address,private_key:a}],outputs:[{address:e.address,amount:1e8*e.amount}]},function(){var e=arguments,t=e;console.log("================================="),console.log(t),console.log("=================================")})}}})}),define("wallet/initializers/export-application-global",["ember","wallet/config/environment","exports"],function(e,t,a){"use strict";function s(e,t){var a=n.String.classify(r.modulePrefix);r.exportApplicationGlobal&&(window[a]=t)}var n=e["default"],r=t["default"];a.initialize=s,a["default"]={name:"export-application-global",initialize:s}}),define("wallet/models/address",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Model.extend({total_balance:a.attr(),confirmed_balance:a.attr(),total_balance_btc:function(){return this.get("total_balance")/1e8}.property("total_balance")})}),define("wallet/models/login",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Model.extend({findAll:function(){var e=Ember.ArrayProxy.create({content:[]});return $.ajax("https://api.bitcoinaverage.com/ticker/global/all","GET",{crossDomain:!0,success:function(t){e.set("content",t)}}),e}})}),define("wallet/models/ticker",["ember-data","exports"],function(e,t){"use strict";var a=e["default"],s=a.Model.extend({price:a.attr()});t["default"]=s}),define("wallet/models/transaction",["ember-data","exports"],function(e,t){"use strict";var a=e["default"],s=a.Model.extend({confirmations:a.attr(),inputs:a.attr(),outputs:a.attr(),fees:a.attr(),block_time:a.attr(),value:function(){var e=this,t=this.get("outputs").filter(function(t){return e.get("isOutbound")?-1===t.addresses.indexOf(window._address):t.addresses.contains(window._address)});return t.reduce(function(e,t){return e+t.value},0)}.property("outputs"),value_btc:function(){return this.get("value")/1e8}.property("value"),isOutbound:function(){var e=this.get("inputs").filter(function(e){return e.addresses.contains(window._address)?!0:void 0});return e.length>0}.property("inputs"),shortHash:function(){var e=this.get("id");return[e.slice(0,3),"...",e.slice(e.length-3,e.length)].join("")}.property("id"),blockchainLink:function(){return"https://blockchain.info/tx/"+this.get("id")}.property("id")});t["default"]=s}),define("wallet/router",["ember","wallet/config/environment","exports"],function(e,t,a){"use strict";var s=e["default"],n=t["default"],r=s.Router.extend({location:n.locationType});r.map(function(){this.route("index",{path:"/"}),this.route("wallet"),this.route("logout")}),a["default"]=r}),define("wallet/routes/index",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({tickers:["USD","EUR","THB","PHP"],setupController:function(e){e.set("ticker",this.store.findAll("ticker")),this.startTickerCycle(e,this.tickers.copy())},startTickerCycle:function(e,t){0===t.length&&(t=this.tickers.copy());var a=t.shift();e.set("ticker",this.store.getById("ticker",a));var s=(this.store.getById("ticker",a),this);Em.run.later(function(){s.startTickerCycle(e,t)},3e3)}})}),define("wallet/routes/logout",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Route.extend({setupController:function(){window.localStorage.removeItem("wallet_seed"),this.controllerFor("application").set("wallet",null),window._address=void 0,this.refresh(),this.transitionTo("index")}})}),define("wallet/routes/wallet",["ember","wallet/models/address","exports"],function(e,t,a){"use strict";{var s=e["default"];t["default"]}a["default"]=s.Route.extend({setupController:function(e){window._address&&(this.store.unloadAll("transaction"),e.set("model",this.store.find("transaction")),e.set("address",this.store.find("address",window._address))),this.startTickerCycle(e)},startTickerCycle:function(e){var t=this;Em.run.later(function(){window._address&&(t.store.find("transaction"),t.store.find("address",window._address)),t.startTickerCycle(e)},3e3)}})}),define("wallet/serializers/address",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.RESTSerializer.extend({normalizePayload:function(e){var t=e[0];return{address:{id:t.address,total_balance:t.total.balance,confirmed_balance:t.confirmed.balance}}}})}),define("wallet/serializers/ticker",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.RESTSerializer.extend({normalizePayload:function(e){var t=[];for(var a in e){var s=e[a];t.push({id:a,price:s.last})}return{tickers:t}}})}),define("wallet/serializers/transaction",["ember-data","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.RESTSerializer.extend({primaryKey:"hash",normalizePayload:function(e){return{transactions:e}}})}),define("wallet/templates/application",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var i,l="";return i=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n"),l})}),define("wallet/templates/components/send-form",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var i,l,o="",u=this.escapeExpression,c=s.helperMissing;return r.buffer.push("<form "),r.buffer.push(u(s.action.call(t,"submit",{hash:{on:"submit"},hashTypes:{on:"STRING"},hashContexts:{on:t},contexts:[t],types:["STRING"],data:r}))),r.buffer.push(">\n  Send "),r.buffer.push(u((i=s.input||t&&t.input,l={hash:{type:"text",value:"amount","class":"send-form-field",size:8},hashTypes:{type:"STRING",value:"ID","class":"STRING",size:"INTEGER"},hashContexts:{type:t,value:t,"class":t,size:t},contexts:[],types:[],data:r},i?i.call(t,l):c.call(t,"input",l)))),r.buffer.push(" &nbsp;à¸¿\n  to address "),r.buffer.push(u((i=s.input||t&&t.input,l={hash:{type:"text",value:"address","class":"send-form-field",size:40},hashTypes:{type:"STRING",value:"ID","class":"STRING",size:"INTEGER"},hashContexts:{type:t,value:t,"class":t,size:t},contexts:[],types:[],data:r},i?i.call(t,l):c.call(t,"input",l)))),r.buffer.push('\n  <input type="submit" class="send-form-button" '),r.buffer.push(u((i=s.bindAttr||t&&t.bindAttr,l={hash:{value:"submitTitle"},hashTypes:{value:"ID"},hashContexts:{value:t},contexts:[],types:[],data:r},i?i.call(t,l):c.call(t,"bindAttr",l)))),r.buffer.push(">\n</form>\n"),o})}),define("wallet/templates/components/ticker-board",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var i,l="",o=this.escapeExpression;return r.buffer.push('<div class="ticker-board" '),r.buffer.push(o(s["bind-attr"].call(t,{hash:{"class":"price:visible"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:r}))),r.buffer.push('>\n1 BTC â\n<span class="ticker-value">'),i=s._triageMustache.call(t,"price",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push(" "),i=s._triageMustache.call(t,"ticker",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("</span>\n</div>\n"),l})}),define("wallet/templates/index",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var i,l,o,u="",c=s.helperMissing,d=this.escapeExpression;return r.buffer.push('<div class="background-image"></div>\n'),r.buffer.push(d((l=s["ticker-board"]||t&&t["ticker-board"],o={hash:{price:"ticker.price",ticker:"ticker.id"},hashTypes:{price:"ID",ticker:"ID"},hashContexts:{price:t,ticker:t},contexts:[],types:[],data:r},l?l.call(t,o):c.call(t,"ticker-board",o)))),r.buffer.push('\n<div class="login-box">\n  '),r.buffer.push(d((l=s.input||t&&t.input,o={hash:{"class":"login-box-field",placeholder:"You secure pass phrase",action:"openWallet"},hashTypes:{"class":"STRING",placeholder:"STRING",action:"STRING"},hashContexts:{"class":t,placeholder:t,action:t},contexts:[],types:[],data:r},l?l.call(t,o):c.call(t,"input",o)))),r.buffer.push('\n  <p class="login-box-welcome-text">Hello, coins.ph! I hope you\'ll like this project :) Please come up with relatively secure pass phrase,\n  type it in the box above and get started!</p>\n</div>\n'),i=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n"),u})}),define("wallet/templates/logout",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var i,l="";return i=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(i||0===i)&&r.buffer.push(i),r.buffer.push("\n"),l})}),define("wallet/templates/wallet",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.Handlebars.template(function(e,t,s,n,r){function i(e,t){t.buffer.push("Close wallet")}function l(e,t){var a,n="";return t.buffer.push('\n  <div class="dashboard-transactions">\n    <ul class="dashboard-transactions-list">\n      '),a=s.each.call(e,"tx","in","model",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(4,o,t),contexts:[e,e,e],types:["ID","ID","ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("\n    </ul>\n  </div>\n"),n}function o(e,t){var a,n="";return t.buffer.push("\n        <li "),t.buffer.push(m(s["bind-attr"].call(e,{hash:{"class":":dashboard-transaction tx.isOutbound:outbound:inbound tx.confirmations:confirmed:unconfirmed"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(">\n          "),a=s["if"].call(e,"tx.isOutbound",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(7,c,t),fn:x.program(5,u,t),contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push('\n          <span class="dashboard-transaction-value">'),a=s._triageMustache.call(e,"tx.value_btc",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push("</span>\n          &nbsp;à¸¿ in tracsaction\n          <a "),t.buffer.push(m(s["bind-attr"].call(e,{hash:{href:"tx.blockchainLink"},hashTypes:{href:"STRING"},hashContexts:{href:e},contexts:[],types:[],data:t}))),t.buffer.push(' target="_blank" class="transaction-hash">'),a=s._triageMustache.call(e,"tx.shortHash",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push('</a>\n          <span class="dashboard-transaction-confirmations">'),a=s._triageMustache.call(e,"tx.confirmations",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(a||0===a)&&t.buffer.push(a),t.buffer.push(" confirmations</span>\n        </li>\n      "),n}function u(e,t){t.buffer.push("\n            Sent\n          ")}function c(e,t){t.buffer.push("\n            Recieved\n          ")}function d(e,t){t.buffer.push('\n  <p class="dashboard-no-transactions">This wallet has no transaction history.</p>\n')}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,a.Handlebars.helpers),r=r||{};var f,h,p,b="",m=this.escapeExpression,x=this,v=s.helperMissing;return r.buffer.push('<div {bind-attr class=":qrcode isQRCodeVisible:visible"}></div>\n<div class="dashboard-balance">\n  '),f=s._triageMustache.call(t,"address.total_balance_btc",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push("  \n  &nbsp;à¸¿\n  "),h=s["link-to"]||t&&t["link-to"],p={hash:{"class":"dashboard-logout"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},inverse:x.noop,fn:x.program(1,i,r),contexts:[t],types:["STRING"],data:r},f=h?h.call(t,"logout",p):v.call(t,"link-to","logout",p),(f||0===f)&&r.buffer.push(f),r.buffer.push('\n</div>\n<div class="dashboard-address">\n  '),f=s._triageMustache.call(t,"address.id",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push('\n  <span class="qrcode-icon" '),r.buffer.push(m(s.action.call(t,"showQRCode",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:r}))),r.buffer.push('></span>\n</div>\n<div class="dashboard-send-form">\n'),r.buffer.push(m((h=s["send-form"]||t&&t["send-form"],p={hash:{submit:"sendBTC",submitTitle:"â"},hashTypes:{submit:"STRING",submitTitle:"STRING"},hashContexts:{submit:t,submitTitle:t},contexts:[],types:[],data:r},h?h.call(t,p):v.call(t,"send-form",p)))),r.buffer.push("\n</div>\n\n"),f=s["if"].call(t,"model.length",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(9,d,r),fn:x.program(3,l,r),contexts:[t],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push("\n\n"),f=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(f||0===f)&&r.buffer.push(f),r.buffer.push("\n"),b})}),define("wallet/views/index",["ember","exports"],function(e,t){"use strict";var a=e["default"],s=a.View.extend({});t["default"]=s}),define("wallet/views/login",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.View.extend({templateName:"login"})}),define("wallet/views/wallet",["ember","exports"],function(e,t){"use strict";var a=e["default"];t["default"]=a.View.extend({})}),define("wallet/config/environment",["ember"],function(e){var t="wallet";try{var a=t+"/config/environment",s=e["default"].$('meta[name="'+a+'"]').attr("content"),n=JSON.parse(unescape(s));return{"default":n}}catch(r){throw new Error('Could not read config from meta tag with name "'+a+'".')}}),runningTests?require("wallet/tests/test-helper"):require("wallet/app")["default"].create({});